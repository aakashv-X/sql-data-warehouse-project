CREATE OR ALTER PROCEDURE silver.load_silver
AS
BEGIN
    BEGIN TRY
        DECLARE
            @start_time DATETIME,
            @end_time DATETIME,
            @duration NVARCHAR(50),
            @batch_start_time DATETIME,
            @batch_end_time DATETIME,
            @batch_duration NVARCHAR(50);

        SET @batch_start_time = GETDATE();

        PRINT '===============================================================';
        PRINT 'STARTING SILVER LAYER DATA LOAD PROCESS';
        PRINT '===============================================================' + CHAR(13);

        PRINT '---------------------------------------------------------------';
        PRINT '>> SECTION: CRM SOURCE TABLES';
        PRINT '---------------------------------------------------------------';

        ------------------------------------------------------------------
        -- TABLE 1: silver.crm_cust_info
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.crm_cust_info]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.crm_cust_info;
        INSERT INTO silver.crm_cust_info (
            cst_id, cst_key, cst_firstname, cst_lastname, cst_material_status, cst_gndr, cst_create_date
        )
        SELECT
            cst_id,
            cst_key,
            TRIM(cst_firstname),
            TRIM(cst_lastname),
            CASE WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
                 WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
                 ELSE 'N/A' END,
            CASE WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'Married'
                 WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'Single'
                 ELSE 'Unknown' END,
            cst_create_date
        FROM (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY cst_id, cst_key ORDER BY cst_create_date DESC) AS rn
            FROM bronze.crm_cust_info
        ) t
        WHERE rn = 1 AND cst_id IS NOT NULL AND cst_key IS NOT NULL;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.crm_cust_info] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- TABLE 2: silver.crm_prd_info
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.crm_prd_info]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.crm_prd_info;
        INSERT INTO silver.crm_prd_info (
            prd_id, cat_id, prd_key, prd_nm, prd_cost, prd_line, prd_start_dt, prd_end_dt
        )
        SELECT 
            prd_id,
            CASE WHEN LEN(prd_key) >= 7 THEN REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_')
                 ELSE 'UNKNOWN_CAT' END,
            SUBSTRING(prd_key, 7, LEN(prd_key)),
            prd_nm,
            ISNULL(prd_cost, 0),
            CASE UPPER(TRIM(prd_line))
                WHEN 'M' THEN 'Mountain'
                WHEN 'S' THEN 'Other Sales'
                WHEN 'R' THEN 'Road'
                WHEN 'T' THEN 'Touring'
                ELSE 'Unknown' END,
            CAST(prd_start_dt AS DATE),
            CAST(LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) - 1 AS DATE)
        FROM bronze.crm_prd_info;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.crm_prd_info] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- TABLE 3: silver.crm_sales_details
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.crm_sales_details]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.crm_sales_details;
        INSERT INTO silver.crm_sales_details (
            sls_ord_num, sls_cust_id, sls_prd_key, sls_order_dt, sls_ship_dt, sls_due_dt, sls_sales, sls_quantity, sls_price
        )
        SELECT 
            sls_ord_num,
            sls_cust_id,
            sls_prd_key,
            CASE WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
                 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
                 ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
                 ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price)
                 THEN sls_quantity * ABS(sls_price)
                 ELSE sls_sales END,
            sls_quantity,
            CASE WHEN sls_price IS NULL OR sls_price <= 0
                 THEN sls_sales / NULLIF(sls_quantity, 0)
                 ELSE sls_price END
        FROM bronze.crm_sales_details;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.crm_sales_details] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- SECTION: ERP SOURCE TABLES
        ------------------------------------------------------------------
        PRINT '---------------------------------------------------------------';
        PRINT '>> SECTION: ERP SOURCE TABLES';
        PRINT '---------------------------------------------------------------';

        ------------------------------------------------------------------
        -- TABLE 4: silver.erp_cust_az12
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.erp_cust_az12]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.erp_cust_az12;
        INSERT INTO silver.erp_cust_az12 (cid, bdate, gen)
        SELECT 
            CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid)) ELSE cid END,
            CASE WHEN bdate > GETDATE() THEN NULL ELSE bdate END,
            CASE WHEN gen IS NULL OR gen = '' OR gen != TRIM(gen) THEN 'n/a'
                 WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
                 WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
                 ELSE gen END
        FROM bronze.erp_cust_az12;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.erp_cust_az12] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- TABLE 5: silver.erp_loc_a101
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.erp_loc_a101]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.erp_loc_a101;
        INSERT INTO silver.erp_loc_a101 (cid, cntry)
        SELECT 
            CASE WHEN cid LIKE '%-%' THEN REPLACE(cid, '-', '') ELSE cid END,
            CASE WHEN TRIM(cntry) = 'DE' THEN 'Germany'
                 WHEN TRIM(cntry) IN ('US', 'USA') THEN 'United States'
                 WHEN TRIM(cntry) = '' OR cntry IS NULL THEN NULL
                 ELSE TRIM(cntry) END
        FROM bronze.erp_loc_a101;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.erp_loc_a101] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- TABLE 6: silver.erp_px_cat_g1v2
        ------------------------------------------------------------------
        PRINT '>> START: Loading [silver.erp_px_cat_g1v2]';
        SET @start_time = GETDATE();

        TRUNCATE TABLE silver.erp_px_cat_g1v2;
        INSERT INTO silver.erp_px_cat_g1v2 (id, cat, subcat, maintenance)
        SELECT id, cat, subcat, maintenance FROM bronze.erp_px_cat_g1v2;

        SET @end_time = GETDATE();
        SET @duration = CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR(10));
        PRINT 'COMPLETED: [silver.erp_px_cat_g1v2] in ' + @duration + ' seconds.' + CHAR(13);

        ------------------------------------------------------------------
        -- SUMMARY REPORT
        ------------------------------------------------------------------
        SET @batch_end_time = GETDATE();
        SET @batch_duration = CAST(DATEDIFF(SECOND, @batch_start_time, @batch_end_time) AS NVARCHAR(10));

        PRINT '===============================================================';
        PRINT 'ALL SILVER TABLES LOADED SUCCESSFULLY';
        PRINT '===============================================================';
        PRINT 'Total Batch Duration: ' + @batch_duration + ' seconds.';
        PRINT '===============================================================' + CHAR(13);

    END TRY
    BEGIN CATCH
        PRINT 'An error occurred during silver layer load.';
        PRINT 'Error Message   : ' + ERROR_MESSAGE();
        PRINT 'Error Number    : ' + CAST(ERROR_NUMBER() AS NVARCHAR(10));
        PRINT 'Error Line      : ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        PRINT 'Error Procedure : ' + ISNULL(ERROR_PROCEDURE(), 'N/A');
    END CATCH
END;
GO

--------------------------------------------------------------------------------
-- Execute the Procedure and Verify Data
--------------------------------------------------------------------------------
EXEC silver.load_silver;
GO
SELECT * FROM silver.erp_px_cat_g1v2;
GO
